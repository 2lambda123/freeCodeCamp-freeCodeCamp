EDITION v2.1.02 - Updated to ASP.NET Core 2.1
This guide is an introduction to developing microservices-based applications and managing them using containers. It discusses architectural design and
implementation approaches using .NET Core and Docker containers.
To make it easier to get started, the guide focuses on a reference containerized and microservice-based application that you can explore. The reference
application is available at the eShopOnContainers GitHub repo.
Download this eBook in your format of choice: | PDF | MOBI | EPUB |
Clone/Fork the reference application eShopOnContainers on GitHub
Watch the introductory video on Channel 9
Get to know the Microservices Architecture right away
Enterprises are increasingly realizing cost savings, solving deployment problems, and improving DevOps and production operations by using
containers. Microsoft has been releasing container innovations for Windows and Linux by creating products like Azure Container Service and Azure
Service Fabric, and by partnering with industry leaders like Docker, Mesosphere, and Kubernetes. These products deliver container solutions that help
companies build and deploy applications at cloud speed and scale, whatever their choice of platform or tools.
Docker is becoming the de facto standard in the container industry, supported by the most significant vendors in the Windows and Linux ecosystems.
(Microsoft is one of the main cloud vendors supporting Docker.) In the future, Docker will probably be ubiquitous in any datacenter in the cloud or onpremises.
In addition, the microservices architecture is emerging as an important approach for distributed mission-critical applications. In a microservice-based
architecture, the application is built on a collection of services that can be developed, tested, deployed, and versioned independently.
This guide is an introduction to developing microservices-based applications and managing them using containers. It discusses architectural design and
implementation approaches using .NET Core and Docker containers. To make it easier to get started with containers and microservices, the guide
focuses on a reference containerized and microservice-based application that you can explore. The sample application is available at the
eShopOnContainers GitHub repo.
This guide provides foundational development and architectural guidance primarily at a development environment level with a focus on two
technologies: Docker and .NET Core. Our intention is that you read this guide when thinking about your application design without focusing on the
infrastructure (cloud or on-premises) of your production environment. You will make decisions about your infrastructure later, when you create your
production-ready applications. Therefore, this guide is intended to be infrastructure agnostic and more development-environment-centric.
After you have studied this guide, your next step would be to learn about production-ready microservices on Microsoft Azure.
This guide has been revised to cover .NET Core 2.1 version plus many additional updates related to the same “wave” of technologies (that is. Azure and
additional 3rd party technologies) coinciding in time with .NET Core 2.1. That’s why the book version has also been updated to version 2.1.What this guide does not cover
Additional resources
Who should use this guide
How to use this guide
Related microservice and container-based reference application: eShopOnContainers
Send us your feedback!
Credits
This guide does not focus on the application lifecycle, DevOps, CI/CD pipelines, or team work. The complementary guide Containerized Docker
Application Lifecycle with Microsoft Platform and Tools focuses on that subject. The current guide also does not provide implementation details on
Azure infrastructure, such as information on specific orchestrators.
Containerized Docker Application Lifecycle with Microsoft Platform and Tools (downloadable e-book)
https://aka.ms/dockerlifecycleebook
We wrote this guide for developers and solution architects who are new to Docker-based application development and to microservices-based
architecture. This guide is for you if you want to learn how to architect, design, and implement proof-of-concept applications with Microsoft
development technologies (with special focus on .NET Core) and with Docker containers.
You will also find this guide useful if you are a technical decision maker, such as an enterprise architect, who wants an architecture and technology
overview before you decide on what approach to select for new and modern distributed applications.
The first part of this guide introduces Docker containers, discusses how to choose between .NET Core and the .NET Framework as a development
framework, and provides an overview of microservices. This content is for architects and technical decision makers who want an overview but don't
need to focus on code implementation details.
The second part of the guide starts with the Development process for Docker based applications section. It focuses on development and microservice
patterns for implementing applications using .NET Core and Docker. This section will be of most interest to developers and architects who want to focus
on code and on patterns and implementation details.
The eShopOnContainers application is an open-source reference app for .NET Core and microservices that is designed to be deployed using Docker
containers. The application consists of multiple subsystems, including several e-store UI front ends (a Web MVC app, a Web SPA, and a native mobile
app). It also includes the back-end microservices and containers for all required server-side operations.
The purpose of the application is to showcase architectural patterns. IT IS NOT A PRODUCTION-READY TEMPLATE to start real-world
applications. In fact, the application is in a permanent beta state, as it’s also used to test new potentially interesting technologies as they show up
