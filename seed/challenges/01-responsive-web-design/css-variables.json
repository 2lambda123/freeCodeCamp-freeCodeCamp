{
  "name": "CSS Variables",
  "order": 7,
  "time": "5 hours",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "5a9d7252424fe3d0e10cad0f",
      "title": "Introduction to the CSS Grid Challenges",
      "description": [
        [
          "",
          "",
          "<dfn>CSS Variables</dfn> def and featuers to be added",
          ""
        ]
      ],
      "releasedOn": "Mar 15, 2018",
      "challengeSeed": [],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "type": "waypoint",
      "challengeType": 7,
      "isRequired": false,
      "translations": {}
    },
    {
      "id": "5a9d725e424fe3d0e10cad10",
      "title": "Quickly change many styles with CSS Variables",
      "description": [
        "CSS Variables are a powerful way to change many CSS style properties at once by only having to change one value. This can dramatically simplify updating and changing the styles on your web page. Do the challenge below to see how changing three values can change the value of many elements.",
        "<hr>",
        "In the <code>penguin</code> class, change the <code>black</code> value to <code>gray</code>, the <code>gray</code> value to <code>white</code>, and the <code>yellow</code> value to <code>orange</code>."
      ],
      "challengeSeed": [
        "<style>",
        "  .penguin {",
        "            ",
        "    /* change below */",
        "    --penguin-skin: black;",
        "    --penguin-belly: gray;",
        "    --penguin-beak: yellow;",
        "    /* change above */",
        "              ",
        "    position: relative;",
        "    margin: auto;",
        "    display: block;",
        "    margin-top: 5%;",
        "    width: 400px;",
        "    height: 400px;",
        "  }",
        "  ",
        "  .penguin-top {",
        "    top: 10%;",
        "    left: 25%;",
        "    background: var(--penguin-skin, gray);",
        "    width: 50%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .penguin-bottom {",
        "    top: 40%;",
        "    left: 23.5%;",
        "    background: var(--penguin-skin, gray);",
        "    width: 53%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 100% 100%;",
        "  }",
        "  ",
        "  .right-hand {",
        "    top: 0%;",
        "    left: -5%;",
        "    background: var(--penguin-skin, gray);",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 120% 30%;",
        "    transform: rotate(45deg);",
        "    z-index: -1;",
        "  }",
        "  ",
        "  .left-hand {",
        "    top: 0%;",
        "    left: 75%;",
        "    background: var(--penguin-skin, gray);",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 30% 120%;",
        "    transform: rotate(-45deg);",
        "    z-index: -1;",
        "  }",
        "  ",
        "  .right-cheeck {",
        "    top: 15%;",
        "    left: 35%;",
        "    background: var(--penguin-belly, white);",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .left-cheeck {",
        "    top: 15%;",
        "    left: 5%;",
        "    background: var(--penguin-belly, white);",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .belly {",
        "    top: 60%;",
        "    left: 2.5%;",
        "    background: var(--penguin-belly, white);",
        "    width: 95%;",
        "    height: 100%;",
        "    border-radius: 120% 120% 100% 100%;",
        "  }",
        "  ",
        "  .right-feet {",
        "    top: 85%;",
        "    left: 60%;",
        "    background: var(--penguin-beak, orange);",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(-80deg);",
        "    z-index: -2222;  ",
        "  }",
        "  ",
        "  .left-feet {",
        "    top: 85%;",
        "    left: 25%;",
        "    background: var(--penguin-beak, orange);",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(80deg);",
        "    z-index: -2222;  ",
        "  }",
        "  ",
        "  .right-eye {",
        "    top: 45%;",
        "    left: 60%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%; ",
        "  }",
        "  ",
        "  .left-eye {",
        "    top: 45%;",
        "    left: 25%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .sparkle {",
        "    top: 25%;",
        "    left: 15%;",
        "    background: white;",
        "    width: 35%;",
        "    height: 35%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .blush-right {",
        "    top: 65%;",
        "    left: 15%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .blush-left {",
        "    top: 65%;",
        "    left: 70%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .beak-top {",
        "    top: 60%;",
        "    left: 40%;",
        "    background: var(--penguin-beak, orange);",
        "    width: 20%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .beak-bottom {",
        "    top: 65%;",
        "    left: 42%;",
        "    background: var(--penguin-beak, orange);",
        "    width: 16%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  body {",
        "    background:#c6faf1;",
        "  }",
        "  ",
        "  .penguin * {",
        "    position: absolute;",
        "   }",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    },
    {
      "id": "5a9d726c424fe3d0e10cad11",
      "title": "Create a custom CSS Variable",
      "description": [
        "To create a <code>CSS Variable</code> you just need to give it a name with `two dashes` in front of it, and assign it a value like this:",
        "<blockquote>--penguin-skin: gray;</blockquote>",
        "This will create a variable named `--penguin-skin` and assign it the value of `gray`.",
        "Now you can use that variable elsewhere in your CSS to change the value of anything that accepts a color to gray.",
        "<hr>",
        "Create a variable name `--penguin-skin` and give it a value of `gray`"
      ],
      "challengeSeed": [
        "<style>",
        "  .penguin {",
        "    /*add code below*/",
        "  ",
        "    /*add code above*/",
        "    position: relative;",
        "    margin: auto;",
        "    display: block;",
        "    margin-top: 5%;",
        "    width: 400px;",
        "    height: 400px;",
        "  }",
        "  ",
        "  .penguin-top {",
        "    top: 10%;",
        "    left: 25%;",
        "    background: black;",
        "    width: 50%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .penguin-bottom {",
        "    top: 40%;",
        "    left: 23.5%;",
        "    background: black;",
        "    width: 53%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 100% 100%;",
        "  }",
        "  ",
        "  .right-hand {",
        "    top: 0%;",
        "    left: -5%;",
        "    background: black;",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 120% 30%;",
        "    transform: rotate(45deg);",
        "    z-index: -1;",
        "  }",
        "  ",
        "  .left-hand {",
        "    top: 0%;",
        "    left: 75%;",
        "    background: black;",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 30% 120%;",
        "    transform: rotate(-45deg);",
        "    z-index: -1;",
        "  }",
        "  ",
        "  .right-cheeck {",
        "    top: 15%;",
        "    left: 35%;",
        "    background: white;",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .left-cheeck {",
        "    top: 15%;",
        "    left: 5%;",
        "    background: white;",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .belly {",
        "    top: 60%;",
        "    left: 2.5%;",
        "    background: white;",
        "    width: 95%;",
        "    height: 100%;",
        "    border-radius: 120% 120% 100% 100%;",
        "  }",
        "  ",
        "  .right-feet {",
        "    top: 85%;",
        "    left: 60%;",
        "    background: orange;",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(-80deg);",
        "    z-index: -2222;  ",
        "  }",
        "  ",
        "  .left-feet {",
        "    top: 85%;",
        "    left: 25%;",
        "    background: orange;",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(80deg);",
        "    z-index: -2222;  ",
        "  }",
        "  ",
        "  .right-eye {",
        "    top: 45%;",
        "    left: 60%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%; ",
        "  }",
        "  ",
        "  .left-eye {",
        "    top: 45%;",
        "    left: 25%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .sparkle {",
        "    top: 25%;",
        "    left: 15%;",
        "    background: white;",
        "    width: 35%;",
        "    height: 35%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .blush-right {",
        "    top: 65%;",
        "    left: 15%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .blush-left {",
        "    top: 65%;",
        "    left: 70%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .beak-top {",
        "    top: 60%;",
        "    left: 40%;",
        "    background: orange;",
        "    width: 20%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  .beak-bottom {",
        "    top: 65%;",
        "    left: 42%;",
        "    background: orange;",
        "    width: 16%;",
        "    height: 10%;",
        "    border-radius: 50%;  ",
        "  }",
        "  ",
        "  body {",
        "    background:#c6faf1;",
        "  }",
        "  ",
        "  .penguin * {",
        "    position: absolute;",
        "   }",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    },
    {
      "id": "5a9d727a424fe3d0e10cad12",
      "title": "Use a custom CSS variable",
      "description": [
        "After you created your variable you can now assign the value of that variable to other CSS properties by referencing the name you gave it.",
        "<blockqoute>background: var(--penguin-skin);</blockquote>",
        "This will change the background of whatever element you are targeting to gray because that is the value of the <code>--penguin-skin</code> variable.",
        "<strong>Note</strong>: Styles will not be applied unless the variable names are an exact match.",
        "<hr>",
        "Apply the `--penguin-skin` variable to the `background` property of the `penguin-top`, `penguin-bottom`, `right-hand` and `left-hand` classes."
      ],
      "challengeSeed": [
        "<style>",
        "  .penguin {",
        "    --penguin-skin: grey;",
        "    position: relative;",
        "    margin: auto;",
        "    display: block;",
        "    margin-top: 5%;",
        "    width: 400px;",
        "    height: 400px;",
        "  }",
        "  ",
        "  .penguin-top {",
        "    top: 10%;",
        "    left: 25%;",
        "    ",
        "    /* change below */",
        "    background: black;",
        "    /* change above */",
        "    ",
        "    width: 50%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .penguin-bottom {",
        "    top: 40%;",
        "    left: 23.5%;",
        "    ",
        "    /* change below */",
        "    background: black;",
        "    /* change above */",
        "    ",
        "    width: 53%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 100% 100%;",
        "  }",
        "  ",
        "  .right-hand {",
        "    top: 0%;",
        "    left: -5%;",
        "    ",
        "    /* change below */",
        "    background: black;",
        "    /* change above */",
        "    ",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 120% 30%;",
        "    transform: rotate(45deg);",
        "    z-index: -1;",
        "  }",
        "  ",
        "  .left-hand {",
        "    top: 0%;",
        "    left: 75%;",
        "    ",
        "    /* change below */",
        "    background: black;",
        "    /* change above */",
        "    ",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 30% 120%;",
        "    transform: rotate(-45deg);",
        "    z-index: -1;",
        "  }",
        "  .right-cheeck {",
        "    top: 15%;",
        "    left: 35%;",
        "    background: white;",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .left-cheeck {",
        "    top: 15%;",
        "    left: 5%;",
        "    background: white;",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .belly {",
        "    top: 60%;",
        "    left: 2.5%;",
        "    background: white;",
        "    width: 95%;",
        "    height: 100%;",
        "    border-radius: 120% 120% 100% 100%;",
        "  }",
        "  ",
        "  .right-feet {",
        "    top: 85%;",
        "    left: 60%;",
        "    background: orange;",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(-80deg);",
        "    z-index: -2222;  ",
        "  }",
        "  ",
        "  .left-feet {",
        "    top: 85%;",
        "    left: 25%;",
        "    background: orange;",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(80deg);",
        "    z-index: -2222;  ",
        "  }",
        "  ",
        "  .right-eye {",
        "    top: 45%;",
        "    left: 60%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%; ",
        "  }",
        "  ",
        "  .left-eye {",
        "    top: 45%;",
        "    left: 25%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .sparkle {",
        "    top: 25%;",
        "    left: 15%;",
        "    background: white;",
        "    width: 35%;",
        "    height: 35%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .blush-right {",
        "    top: 65%;",
        "    left: 15%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .blush-left {",
        "    top: 65%;",
        "    left: 70%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .beak-top {",
        "    top: 60%;",
        "    left: 40%;",
        "    background: orange;",
        "    width: 20%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .beak-bottom {",
        "    top: 65%;",
        "    left: 42%;",
        "    background: orange;",
        "    width: 16%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  body {",
        "    background:#c6faf1;",
        "  }",
        "  ",
        "  .penguin * {",
        "    position: absolute;",
        "   }",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    },
    {
      "id": "5a9d7286424fe3d0e10cad13",
      "title": "Attach a Fallback value when using a variable",
      "description": [
        "When using your variable as a CSS property value, you can attach a fallback value that your page will revert to if for some reason it can't get your variable to work.<br>It could be that someone is using an older browser that hasn't yet adopted CSS Variables, or perhaps their device doesn't support the value you gave the variable. Here's how you do it:",
        "<code>background: var(--penguin-skin, black);</code>",
        "This will set background to black if there is a problem with your variable.",
        "<strong>Note</strong>: This can be very useful for debugging.",
        "<hr>",
        "Add a fallback value of <code>black</code> to the background property of <code>penguin-top</code> and <code>penguin-bottom</code> class."
      ],
      "challengeSeed": [
        "<style>",
        "  .penguin {",
        "    --penguin-skin: gray;",
        "    --penguin-belly: white;",
        "    --penguin-beak: orange;",
        "    position: relative;",
        "    margin: auto;",
        "    display: block;",
        "    margin-top: 5%;",
        "    width: 400px;",
        "    height: 400px;",
        "  }",
        "  ",
        "  .penguin-top {",
        "    top: 10%;",
        "    left: 25%;",
        "    /* change below */",
        "    background: var(--pengiun-skin);",
        "    /* change above */",
        "    width: 50%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .penguin-bottom {",
        "    top: 40%;",
        "    left: 23.5%;",
        "    /* change below */",
        "    background: var(--pengiun-skin);",
        "    /* change above */",
        "    width: 53%;",
        "    height: 45%;",
        "    border-radius: 70% 70% 100% 100%;",
        "  }",
        "  ",
        "  .right-hand {",
        "    top: 0%;",
        "    left: -5%;",
        "    background: var(--penguin-skin, black);",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 120% 30%;",
        "    transform: rotate(45deg);",
        "    z-index: -1;",
        "  }",
        "  ",
        "  .left-hand {",
        "    top: 0%;",
        "    left: 75%;",
        "    background: var(--penguin-skin, black);",
        "    width: 30%;",
        "    height: 60%;",
        "    border-radius: 30% 30% 30% 120%;",
        "    transform: rotate(-45deg);",
        "    z-index: -1;",
        "  }",
        "  .right-cheeck {",
        "    top: 15%;",
        "    left: 35%;",
        "    background: var(--penguin-belly);",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .left-cheeck {",
        "    top: 15%;",
        "    left: 5%;",
        "    background: var(--penguin-belly);",
        "    width: 60%;",
        "    height: 70%;",
        "    border-radius: 70% 70% 60% 60%;",
        "  }",
        "  ",
        "  .belly {",
        "    top: 60%;",
        "    left: 2.5%;",
        "    background: var(--penguin-belly);",
        "    width: 95%;",
        "    height: 100%;",
        "    border-radius: 120% 120% 100% 100%;",
        "  }",
        "  ",
        "  .right-feet {",
        "    top: 85%;",
        "    left: 60%;",
        "    background: var(--penguin-beak);",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(-80deg);",
        "    z-index: -2222;",
        "  }",
        "  ",
        "  .left-feet {",
        "    top: 85%;",
        "    left: 25%;",
        "    background: var(--penguin-beak);",
        "    width: 15%;",
        "    height: 30%;",
        "    border-radius: 50% 50% 50% 50%;",
        "    transform: rotate(80deg);",
        "    z-index: -2222;",
        "  }",
        "  ",
        "  .right-eye {",
        "    top: 45%;",
        "    left: 60%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .left-eye {",
        "    top: 45%;",
        "    left: 25%;",
        "    background: black;",
        "    width: 15%;",
        "    height: 17%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .sparkle {",
        "    top: 25%;",
        "    left: 15%;",
        "    background: white;",
        "    width: 35%;",
        "    height: 35%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .blush-right {",
        "    top: 65%;",
        "    left: 15%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .blush-left {",
        "    top: 65%;",
        "    left: 70%;",
        "    background: pink;",
        "    width: 15%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .beak-top {",
        "    top: 60%;",
        "    left: 40%;",
        "    background: var(--penguin-beak);",
        "    width: 20%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  .beak-bottom {",
        "    top: 65%;",
        "    left: 42%;",
        "    background: var(--penguin-beak);",
        "    width: 16%;",
        "    height: 10%;",
        "    border-radius: 50%;",
        "  }",
        "  ",
        "  body {",
        "    background:#c6faf1;",
        "  }",
        "  ",
        "  .penguin * {",
        "   position: absolute;",
        "   }",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    },
    {
      "id": "5a9d7295424fe3d0e10cad14",
      "title": "Cascading CSS variables",
      "description": [
        "When you create your variable, it is available in to use on the element you create it in and all the elements nested within it.<br>This effect is known as cascading. Because of this, CSS Variables are often defined in the :root element.<br>You can think of the :root element as a container for your entire HTML document in the same way that an <html> tag is a container for the <body> tag.<br>By creating your variables in :root, they will be available throughout the whole web page.",
        "In the preview you can see how <code>--primaryColor</code> only changes the color of the element of where it is created and the elements within it."
      ],
      "challengeSeed": [
        "<style>",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    },
    {
      "id": "5a9d72a1424fe3d0e10cad15",
      "title": "Change a variable for a specific area of your",
      "description": [
        "When you create your variables in :root it will set the value of that variable for the whole page. Unless at some point you change the value of that variable.",
        "<strong>Note</strong>: Use this wisely as it can almost defeat the purpose of using CSS Variables."
      ],
      "challengeSeed": [
        "<style>",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    },
    {
      "id": "5a9d72ad424fe3d0e10cad16",
      "title": "Use a media query to change a variable",
      "description": [
        "Change redefine variables on a media query Use a media query to change the size of the penguin"
      ],
      "challengeSeed": [
        "<style>",
        "</style>",
        "<div class=\"penguin\">",
        "  <div class=\"penguin-bottom\">",
        "    <div class=\"right-hand\"></div>",
        "    <div class=\"left-hand\"></div>",
        "    <div class=\"right-feet\"></div>",
        "    <div class=\"left-feet\"></div>    ",
        "  </div>",
        "  <div class=\"penguin-top\">",
        "    <div class=\"right-cheeck\"></div>",
        "    <div class=\"left-cheeck\"></div>",
        "    <div class=\"belly\"></div>",
        "    <div class=\"right-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"left-eye\">",
        "      <div class=\"sparkle\"></div>",
        "    </div>",
        "    <div class=\"blush-right\"></div>",
        "    <div class=\"blush-left\"></div>",
        "    <div class=\"beak-top\"></div>",
        "    <div class=\"beak-bottom\"></div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?100px\\s*?100px\\s*?100px\\s*?;[\\s\\S]*}/gi), 'message: <code>container</code> class should have a <code>grid-template-columns</code> property with three units of <code>100px</code>.');"
      ],
      "solutions": [],
      "hints": [],
      "type": "waypoint",
      "releasedOn": "Mar 15, 2018",
      "challengeType": 0,
      "translations": {}
    }
  ]
}
