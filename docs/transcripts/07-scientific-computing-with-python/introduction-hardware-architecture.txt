Introduction: Hardware Architecture
Transcript:
 Hello and welcome back to hardware architecture. Now you might ask, you know, why do I tell you about hardware architecture probably you’re not going to build any hardware, although it’s fun stuff to do and if you’re going to become a computer scientist which most of you won’t want to be it’s a great thing to study those who build our hardware are amazingly talented individuals and it’s a really rewarding job. The reasonI like talking to you about hardware because I want to be able to use words at some point and say “secondary storage” or “central processing unit” or “random access memory”  or peripherals you know input devices and I want to be able to say those words and I want you to be able to understand them
So I’m going to start with a piece of hardware called the Raspberry Pi and the Raspberry Pi is a cute little single board computer. As we go forward these things are smaller and smaller and smaller and the interesting thing is that the architecture of these stays the same but the number of components drops. 
So I’m going to start and I’m going to give you a block diagram of a generic computer and tell you the major parts of it. Now I’m going to show you some really old hardware, some really new hardware, and then some hardware that is of medium age. And the medium age hardware is probably the easiest one to see: the architecture is the same, okay, and so the basic block diagram is that the brains, if there are brains of computers which there really aren’t, the software is the closest thing computers have to brains but in hardware the closest brain the computer has is this called the micro processing unit or a central processor unit. And this is designed 3 billion times a second to ask the question what do you want me to do next and these little pins on the back are instructions, like 32 or 64 of these pins 3 billion times a second we send an instruction into these things. Now we can’t sit there and talk to it, we can’t, so the instructions we store in what’s called the main memory and this memory is really fast and the memory sort of feeds this and so every time the CPU needs a new instruction it asks the memory where that instruction is and so the memory feeds the instruction CPU does it, the CPU says give me another instruction, the CPU does it, gives another instruction and that is the basic essence of programming. This asks what’s next and this is where your program is stored or a program you purchased or came with your hardware where that’s all stored and those are your places and so you end up inside your programs and end up inside this memory. So then there’s a I mean and so in software you tend to program the CPU and if you had bought a desktop computer a number of years back it would have this thing called the motherboard and the motherboard is called this because it kind of connects all of these components together. So if you buy memory by itself it does nothing but it has a place to plug into the motherboard and if you buy a microprocessor it has a place to plug into the motherboard and if you buy a hard drive, this is a really old hard drive, it has a place to plug into on a motherboard and so the motherboard sort of connects everything together. 
The harddrive is secondary storage. How secondary storage is different than the main memory, which there it is, I’ve got to unfile this stuff. So this main memory is really fast, but as soon as you turn the power off of this memory it vanishes. So to store files like word processing files or text files or whatever, you’ve got to store it on something that lasts a little bit longer, and so that’s the purpose of the secondary storage. It’s permanent, when the power’s off it stores it. Now this one is in such bad shape it isn’t probably storing anything, but it’s got these little heads and it spins around and goes in and down we’ll have a video later that shows you one of these things that’s not in as bad a shape. If you look this has four different platters that are all spinning around and so this is just using magnetic material and electronics that sort of magnetized and demagnetized this stuff. And if you look at the disk , physical discs are rated in revolutions per minute and that’s how many times this thing spins around and if you got an old desktop and you hear it spin up this is the thing that’s spinning. And it’s the place that your operating system lives, and your files live, and your applications live while they’re stored and while the computer is turned off and then they’re loaded into this while they’re running and then this CPU takes the data from main memory and your program runs at three billion operations per second. 
So let’s talk a little bit about something that this is probably from the 1960s or 70s. This actually has, if you’re an electrical person, has capacitors, those little silver things are capacitors. These little colored things are resistors and that’s more capacitors and then there’s wires and wires move everything. And so when you say like this has millions of transistors, oh wait that isn’t a capacitor, that’s a transistor, that’s a transistor. When you say this here has etched, and if you look closely at this, go look at a picture of a microprocessor online, you will see that it has millions of these, and so the difference between 1960 and today is this circuitry of capacitors resistors and transistors has been micro-ized and put onto this. It’s using a photographic process and they’re tiny-er and tiny-er and they’re putting more and more on. And if you think going from millions of these to one of these is crazy, the thing that’s happening now, and the reason we have whole computers inside our pockets, is that everything, all of this, this whole thing, CPU memory everything all of it connected and the storage is being made smaller and smaller. And so this little single board computer, a Raspberry Pi, has one thing in it, and it has the main memory and has the CPU it has connections for things like peripherals like keyboards and stuff and it doesn’t yet have secondary storage on it, the secondary storage gets plugged in right here by a USB and then if you take it one step further to my phone it’s got the secondary storage built right in. And so this picture goes from the size of cabinets in the old days all the way down to really tiny, but at the end of the day inside it is a highly sophisticated piece of circuitry that asks for instructions one at a time, and main memory that holds the instructions and feeds them okay central processor does the thinking take a look here, central processor does the thinking, runs the program it’s asking what’s next, it’s not really smart but it’s really fast and so we compensate for the lack of intelligence of things by us writing really good software taht runs really fast and so voice recognition on things like phones is possible because computers have so much storage and they run so fast and the algorithms that do voice recognition are finally starting to work. 
Input devices like keyboards, and mice, and pens and whatever, they come in, output devices are like the screens that we see the main memory is the fast part of the computer that stores all the programs and the secondary memory is the permanent storage.
Increasingly secondary memory, is do I have any USB sticks in here? I don’t, well increasingly secondary memory is flash RAM or static RAM with no moving parts so you in a few years you’ll not even be able to see secondary memory with moving parts. But that’s ok, it’s still secondary memory, it’s memory that lasts. 
And so you, and where your place is in here is you live in the main memory this is you, you are here. ANd so in a sense, when the CPU asks a question, what’s next, it’s your job to answer that and you answer that by writing Python code and so your Python code you’ll write a file in Python code blah blah blah blah blah blah blah and then that Python code sort of gets loaded into main memory there’s a magic translation process that happens and then your code is actually answering this question three billion times a second, so three billion times a second you’re sitting there but this is you you’re you’re really out here but you then write a file and the file’s loaded in and then the file runs and that’s how things are at and that’s that’s your palace in the world now what’s actually running is not Python code. There is as I said a translation process, you write a Python file and then Python itself translates this into the actual language known by the microprocessor whis is a series of zeros and ones called machine language. Someday I would love to teach you a class on machine language but for now we’re going to teach you Python, we’re going to use Python as a crutch, we don’t have to talk machine language but you could, if you really wanted to, you could know how to write machine language. But I assure you that Python is far easier to learn than machine language so Python acts as a translator, translates what you’re doing into machine language and then the machine language is what’s sent back and forth. But still even though it’s translated into machine language, it’s you, it’s you answering those questions and that’s what a program is, it’s you pre-store your response to the what next question over and over again. So here’s a couple of videos that you can look at on YouTube about a CPU these CPUs and looks very much like this CPU that I’ve got with me these CPUs run have extremely high heat when you put this thing on your or your computer on your lap and it starts to heat up that means it’s thinking really really hard and so this is a small little old video from a long time ago that shows what happens when you take out the cooling capability of microprocessors and how just how hot they can be and the other video that I have is a hard disk something like this hard disk that have except that is works and they’ve turned the power on. Some of them last for a few seconds some of them last for a few minutes it’s never [sneezes multiple times] I must be allergic to this hard drive or maybe there’s just dust in this hard drive and I keep spinning it and I sneeze but basically some of them last for a few seconds some of them last for a few minutes, it’s not a good idea to open them up but I’m glad somebody opened it up and then did what they did and then recorded it so that we can all enjoy what it is they are capable of doing. 
Ok so that’s a quick introduction to hardware mostly so that I can use those words going forward. Now what we’re going to talk about next is communicating in the language Python that is writing code and putting it into the computer so that, that can execute. Ok.